image: google/cloud-sdk
pipelines:
  default:
    - step:
        name: setup terraform
        script:
          - apt-get update && apt-get install unzip wget -y 
          - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip || echo fine...
          - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip 
          - yes | cp terraform /usr/bin/
          - ls /usr/bin
        artifacts:
          - terraform
    - step: 
        name: terraform init
        oidc: true
        script:
          - cp terraform /usr/bin/
          - ls . /usr/bin/
          - export SERVICE_ACCOUNT_EMAIL="${SERVICE_ACCOUNT_NAME}@${PROJECT_NAME}.iam.gserviceaccount.com"
          - ./get_oidctoken.sh
          - export GOOGLE_APPLICATION_CREDENTIALS=`pwd`/sts-creds.json
          - /usr/bin/terraform init -backend-config="bucket=${BUCKET_PATH}" -backend-config="prefix=${BITBUCKET_REPO_FULL_NAME}" 
          - /usr/bin/terraform plan
  branches: 
    staging:
      - step:
          name: setup terraform
          script:
            - apt-get update && apt-get install unzip wget -y 
            - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip || echo fine...
            - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip 
            - yes | cp terraform /usr/bin/
            - ls /usr/bin
          artifacts:
            - terraform
      - step:
          name: master branch execution tf-apply
          oidc: true
          script: 
            - cp terraform /usr/bin/
            - ls . /usr/bin/
            - export SERVICE_ACCOUNT_EMAIL="${SERVICE_ACCOUNT_NAME}@${PROJECT_NAME}.iam.gserviceaccount.com"
            - echo $GCP_PROJECT_NUMBER ${workload_identity_pool_id} ${workload_identity_pool_provider_id} ${SERVICE_ACCOUNT_EMAIL}  $PROJECT_NAME
            - ./get_oidctoken.sh
            - export GOOGLE_APPLICATION_CREDENTIALS=`pwd`/sts-creds.json
            - /usr/bin/terraform init -backend-config="bucket=${BUCKET_PATH}" -backend-config="prefix=${BITBUCKET_REPO_FULL_NAME}" 
            - /usr/bin/terraform plan
            - /usr/bin/terraform apply -auto-approve
    dev:
      - step:
          name: setup terraform
          script:
            - apt-get update && apt-get install unzip wget -y 
            - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip || echo fine...
            - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip 
            - yes | cp terraform /usr/bin/
            - ls /usr/bin
          artifacts:
            - terraform
      - step:
          name: dev branch execution tf-apply
          oidc: true
          script: 
            - cp terraform /usr/bin/
            - ls . /usr/bin/
            - export SERVICE_ACCOUNT_EMAIL="${SERVICE_ACCOUNT_NAME}@${PROJECT_NAME}.iam.gserviceaccount.com"
            - echo $GCP_PROJECT_NUMBER ${workload_identity_pool_id} ${workload_identity_pool_provider_id} ${SERVICE_ACCOUNT_EMAIL}  $PROJECT_NAME
            - ./get_oidctoken.sh
            - export GOOGLE_APPLICATION_CREDENTIALS=`pwd`/sts-creds.json
            - /usr/bin/terraform init -backend-config="bucket=${BUCKET_PATH}" -backend-config="prefix=${BITBUCKET_REPO_FULL_NAME}" 
            - /usr/bin/terraform plan
            - /usr/bin/terraform apply -auto-approve
    prod:
      - step:
          name: setup terraform
          script:
            - apt-get update && apt-get install unzip wget -y 
            - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip || echo fine...
            - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip 
            - yes | cp terraform /usr/bin/
            - ls /usr/bin
          artifacts:
            - terraform
      - step:
          name: prod branch execution tf-apply
          oidc: true
          script: 
            - cp terraform /usr/bin/
            - ls . /usr/bin/
            - export SERVICE_ACCOUNT_EMAIL="${SERVICE_ACCOUNT_NAME}@${PROJECT_NAME}.iam.gserviceaccount.com"
            - echo $GCP_PROJECT_NUMBER ${workload_identity_pool_id} ${workload_identity_pool_provider_id} ${SERVICE_ACCOUNT_EMAIL}  $PROJECT_NAME
            - ./get_oidctoken.sh
            - export GOOGLE_APPLICATION_CREDENTIALS=`pwd`/sts-creds.json
            - /usr/bin/terraform init -backend-config="bucket=${BUCKET_PATH}" -backend-config="prefix=${BITBUCKET_REPO_FULL_NAME}" 
            - /usr/bin/terraform plan
            - /usr/bin/terraform apply -auto-approve


